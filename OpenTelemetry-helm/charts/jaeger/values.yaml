# Default values for jaeger.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: jaegertracing/all-in-one
  tag: 1.45.0
  pullPolicy: IfNotPresent

serviceAgent:
  ports:
    - name: zk-compact-trft
      port: 5775
      protocol: UDP
    - name: config-rest
      port: 5778
      protocol: TCP
    - name: jg-compact-trft
      port: 6831
      protocol: UDP
    - name: jg-binary-trft
      port: 6832
      protocol: UDP

serviceCollector:
  ports:
    - name: http-zipkin
      port: 9411
    - name: grpc-http
      port: 14250
    - name: c-tchan-trft
      port: 14267
    - name: http-c-binary-trft
      port: 14268
    - name: otlp-grpc
      port: 4317
    - name: otlp-http
      port: 4318

serviceQuery:
  ports:
    - name: http-query
      port: 16686
    - name: grpc-query
      port: 16685

resources:
  limits:
    memory: 300Mi


serviceAccount:
  create: true
  name: opentelemetry-demo-jaeger

services:
  main:
    type: ClusterIP
    ports:
      - name: http-query
        port: 16686
        targetPort: http-query
      - name: grpc-query
        port: 16685
        targetPort: grpc-query
  agent:
    clusterIP: None
    ports:
      - name: zk-compact-trft
        port: 5775
        protocol: UDP
      # Add other ports here
  collector:
    clusterIP: None
    ports:
      - name: http-zipkin
        port: 9411
      # Add other ports here
  query:
    clusterIP: None
    ports:
      - name: http-query
        port: 16686
      # Add other ports here

config:
  env:
    - name: METRICS_STORAGE_TYPE
      value: prometheus
    - name: SPAN_STORAGE_TYPE
      value: memory
    # Add other environment variables here

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
